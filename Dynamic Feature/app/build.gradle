import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id "org.jetbrains.kotlin.android" version "1.8.0"
    id "org.jetbrains.kotlin.kapt" version "1.8.0"
}

apply from: '../deps.gradle'

if (rootProject.ext.useOfflineSdks){
    apply from: '../offline_sdks/downloadDeps.gradle'
}

android {
    namespace 'com.tencent.tcmpp.demo'
    compileSdk 34

    defaultConfig {
        applicationId "com.tencent.tmf.miniapp.demo"
        minSdk 21
        targetSdk 34
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        packagingOptions {
            pickFirst 'lib/arm64-v8a/libc++_shared.so'
            pickFirst 'lib/armeabi/libc++_shared.so'
            pickFirst 'lib/armeabi-v7a/libc++_shared.so'
            pickFirst 'lib/arm64-v8a/libmarsxlog.so'
            pickFirst 'lib/armeabi/libmarsxlog.so'
            pickFirst 'lib/armeabi-v7a/libmarsxlog.so'
            pickFirst 'lib/arm64-v8a/libv8jni.so'
        }

        ndk { abiFilters "arm64-v8a" }
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.assemble.doLast {
            StringBuilder builder = new StringBuilder()
            builder.append("${project.rootProject.projectDir}")
                    .append(File.separator)
                    .append("build-app-output")
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                println "outputFile=${outputFile.name}"
                if (outputFile?.name?.endsWith('.apk')) {
                    File file = new File(builder.toString())
                    if (!file.exists()) {
                        file.mkdirs()
                    }
                    copy {
                        from outputFile
                        into builder.toString()
                        rename {
                            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                            "tcmpp-android-demo-${df.format(new Date())}.apk".toString()
                        }
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    dynamicFeatures = [':tcmppdf']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    api 'androidx.appcompat:appcompat:1.6.1'
    api 'com.google.android.material:material:1.8.0'
    api 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    api('com.github.niorgai:StatusBarCompat:2.3.3', {
        exclude group: 'androidx.appcompat:appcompat'
        exclude group: 'com.google.android.material:material'
    })

    api 'androidx.core:core-ktx:1.10.0'

    api("com.github.bumptech.glide:glide:4.15.1") {
        exclude group: "com.android.support"
    }

    api 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    api 'com.google.code.gson:gson:2.9.1'
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    //huawei map support
    implementation 'com.huawei.hms:maps:6.9.0.300'
    implementation 'com.huawei.hms:maps-basic:6.9.0.300'
    implementation 'com.huawei.hms:site:6.5.1.300'

    // map sdk
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'
    // place sdk
    implementation('com.google.android.libraries.places:places:3.5.0') {
        // kotlin meta-info conflict
        exclude(group: "org.jetbrains.kotlin", module: "kotlin-stdlib")
    }

    api 'com.google.android.play:feature-delivery:2.1.0'

    implementation('com.tencent.tcmpp.android:mini_core_res:2.2.6')
    implementation('com.tencent.tcmpp.android:mini_extra_media_support_res:1.5.9')
    api "com.google.android.gms:play-services-ads:23.0.0"
}